<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.candanos</groupId>
    <artifactId>experimental-repository-batch</artifactId>
    <packaging>jar</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>experimental-repository-batch</name>
    <!-- <url>http://maven.apache.org</url> -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- <maven.compiler.fork>true</maven.compiler.fork> -->
        <!-- <maven.compiler.target>1.8</maven.compiler.target> -->
        <!-- <maven.compiler.source>1.8</maven.compiler.source> -->
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.candanos</groupId>
            <artifactId>experimental-repository-core</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <!-- maven resources klasorundekileri otomatik olarak pakete koyar, 
            source'lar source plugin ile jar yaratma disinda bu sekilde de konabilir  -->
            <resource>
                <directory>src/main/cobol</directory>
            </resource>
            <!-- eger istedigimiz zaman resources plugun i tekrar calistirabilirsek, 
            artifacts i da koyabiliriz. -->
            <!-- <resource> -->
            <!-- <directory>target/objects</directory> -->
            <!-- </resource> -->
        </resources>
        <plugins>
            <!-- dependencyleri build directorysine acmak icin, aslinda bunu 
        initialize da yapmaya gerek yok, compile onune koyabiliriz. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <classifier>sources</classifier>
                            <failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
                            <includes>**/*.cpy,**/*.cbl</includes>
                            <excludes>**/*.properties</excludes>
                            <outputDirectory>${project.build.directory}/cobc-syslib</outputDirectory>
                            <!-- <overWriteReleases>false</overWriteReleases> -->
                            <!-- <overWriteSnapshots>true</overWriteSnapshots> -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- istedigimiz directory'i source olarak tanitmak icin. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/main/cobol/</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- ayri bir source jar i yapmak icin. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.candanos</groupId>
                <artifactId>experimental-maven-plugin</artifactId>
                <version>0.0.1-SNAPSHOT</version>
                <configuration>
                    <scriptRunner>bash.exe</scriptRunner>
                    <scriptFile>gnucobol_compiler.sh</scriptFile>
                    <!-- <scriptRunner>python.exe</scriptRunner> -->
                    <!-- <scriptFile>blackbox_compiler.py</scriptFile> -->
                </configuration>
                <!-- <executions> -->
                    <!-- <execution> -->
                        <!-- <goals> -->
                            <!-- <goal>experiment</goal> -->
                        <!-- </goals> -->
                    <!-- </execution> -->
                <!-- </executions> -->
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <classesDirectory>${project.build.directory}</classesDirectory>
                    <includes>
                        <include>objects/**</include>
                        <include>classes/**</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>arbitrary</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>UAT</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
